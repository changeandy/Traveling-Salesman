#BlueJ class context
comment0.target=Verbindung
comment0.text=\r\n\ Erg\u00E4nzen\ Sie\ hier\ eine\ Beschreibung\ f\u00FCr\ die\ Klasse\ Verbindung.\r\n\ \r\n\ @author\ (Ihr\ Name)\ \r\n\ @version\ (eine\ Versionsnummer\ oder\ ein\ Datum)\r\n
comment1.params=a\ b
comment1.target=Verbindung(Stadt,\ Stadt)
comment1.text=\r\n\ Konstruktor.\ Eine\ Verbindung\ f\u00FCgt\ sich\ immer\ in\ die\ Welt\ ihrer\ St\u00E4dte\ ein\ \r\n
comment10.params=verbindung2
comment10.target=int\ compareTo(Verbindung)
comment10.text=\r\n\ compareTo\ -\ Diese\ Methode\ dient\ dem\ Sortieren\ von\ Verbindungen\r\n
comment2.params=
comment2.target=double\ getEntfernung()
comment2.text=\r\n\ getEntfernung\ -\ gibt\ Distanz,\ die\ von\ der\ Verbindung\ abgedeckt\ wird\r\n
comment3.params=
comment3.target=Stadt\ getA()
comment4.params=
comment4.target=Stadt\ getB()
comment5.params=
comment5.target=double\ getPheromonDichte()
comment5.text=\r\n\ getPheromonDichte\ -\ gibt\ die\ Pheromondichte\ aus,\ die\ auf\ dieser\ Verbindung\ besteht\r\n
comment6.params=a\ b
comment6.target=void\ verbinde(Stadt,\ Stadt)
comment6.text=\r\n\ verbinde\ -\ Setzt\ die\ Endpunkte\ der\ Verbindung,\ berechnet\ die\ Entfernung,\r\n\ und\ generiert\ eine\ Linie,\ die\ die\ beiden\ Punkte\ verbindet\r\n
comment7.params=
comment7.target=void\ zeichne()
comment7.text=\r\n\ zeichne\ -\ berechnet\ die\ Entfernung\ und\ generiert\ eine\ Linie,\ die\ die\ beiden\ Punkte\ zeichnet\r\n
comment8.params=farbe
comment8.target=void\ setFarbe(greenfoot.Color)
comment8.text=\r\n\ setFarbe\ -\ Gibt\ der\ Linie\ eine\ neue\ Farbe\r\n
comment9.params=
comment9.target=void\ act()
comment9.text=\r\n\ Act\ -\ tut,\ was\ auch\ immer\ Verbindung\ tun\ will.\ Diese\ Methode\ wird\ aufgerufen,\ \r\n\ sobald\ der\ 'Act'\ oder\ 'Run'\ Button\ in\ der\ Umgebung\ angeklickt\ werden.\ \r\n
numComments=11
